{
  "openapi": "3.0.0",
  "info": {
    "title": "UTFPets API",
    "description": "API completa para gerenciamento de pets com refeições, lembretes, notificações push, controle de peso, integração de calendário e sistema de compartilhamento colaborativo",
    "version": "1.0.0",
    "contact": {
      "name": "UTFPets Team",
      "email": "contato@utfpets.com"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "Servidor de desenvolvimento"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints de autenticação e gerenciamento de usuários"
    },
    {
      "name": "Pets",
      "description": "Gerenciamento de pets"
    },
    {
      "name": "Meals",
      "description": "Gerenciamento de refeições dos pets"
    },
    {
      "name": "Pet Sharing",
      "description": "Compartilhamento de pets com sistema de papéis (owner/editor/viewer)"
    },
    {
      "name": "Reminders",
      "description": "Lembretes de refeições/medicações com agendamento e recorrência"
    },
    {
      "name": "Notifications",
      "description": "Sistema de notificações para eventos do sistema (lembretes, convites, mudanças de papel)"
    },
    {
      "name": "Admin",
      "description": "Painel administrativo para gestão de usuários, pets e auditoria (requer permissão de admin)"
    },
    {
      "name": "Locations",
      "description": "Gerenciamento de localizações dos pets"
    },
    {
      "name": "Pet Weights",
      "description": "Controle de peso dos pets com histórico e tendências"
    },
    {
      "name": "User Devices",
      "description": "Registro de dispositivos para notificações push"
    },
    {
      "name": "Calendar",
      "description": "Integração de calendário (.ics) para lembretes"
    },
    {
      "name": "GraphQL",
      "description": "Proxy para API GraphQL"
    },
    {
      "name": "Educational Articles",
      "description": "Artigos educacionais sobre nutrição e segurança alimentar de pets (endpoints públicos)"
    },
    {
      "name": "Educational Articles - Admin",
      "description": "Gerenciamento de artigos educacionais (requer permissão de admin)"
    },
    {
      "name": "Nutrition",
      "description": "Resumo nutricional e alertas de saúde dos pets"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Registrar novo usuário",
        "description": "Cria uma nova conta de usuário no sistema",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "João Silva"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "joao.silva@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "description": "Mínimo 8 caracteres, deve conter: maiúscula, minúscula, número e caractere especial (@$!%*#?&)",
                    "example": "Senha@123"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "minLength": 8,
                    "description": "Deve ser igual ao campo password",
                    "example": "Senha@123"
                  }
                },
                "required": ["name", "email", "password", "password_confirmation"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {"type": "integer", "example": 1},
                        "name": {"type": "string", "example": "João Silva"},
                        "email": {"type": "string", "example": "joao.silva@example.com"}
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Erro de validação"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Fazer login",
        "description": "Autentica um usuário e retorna o token JWT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "joao.silva@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Senha@123"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Fazer logout",
        "description": "Invalida o token JWT do usuário",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logout realizado com sucesso"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Obter perfil do usuário",
        "description": "Retorna os dados do usuário autenticado",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Dados do usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer", "example": 1},
                    "name": {"type": "string", "example": "João Silva"},
                    "email": {"type": "string", "example": "joao.silva@example.com"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/pets": {
      "get": {
        "tags": ["Pets"],
        "summary": "Listar pets do usuário",
        "description": "Retorna todos os pets do usuário autenticado",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Lista de pets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado"
          }
        }
      },
      "post": {
        "tags": ["Pets"],
        "summary": "Criar novo pet",
        "description": "Cria um novo pet para o usuário autenticado",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Rex"
                  },
                  "species": {
                    "type": "string",
                    "enum": ["Cachorro", "Gato", "Pássaro", "Peixe", "Réptil", "Roedor", "Outro"],
                    "example": "Cachorro"
                  },
                  "breed": {
                    "type": "string",
                    "example": "Labrador"
                  },
                  "birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2020-01-15"
                  },
                  "weight": {
                    "type": "number",
                    "example": 25.5
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Imagem do pet (opcional)"
                  },
                  "notes": {
                    "type": "string",
                    "example": "Cachorro muito dócil e brincalhão"
                  }
                },
                "required": ["name", "species", "breed", "birth_date", "weight"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pet": {
                      "$ref": "#/components/schemas/Pet"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Erro de validação"
          }
        }
      }
    },
    "/v1/pets/{id}": {
      "get": {
        "tags": ["Pets"],
        "summary": "Exibir pet específico",
        "description": "Retorna os detalhes de um pet específico",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do pet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "404": {
            "description": "Pet não encontrado"
          },
          "403": {
            "description": "Sem permissão para visualizar este pet"
          }
        }
      },
      "put": {
        "tags": ["Pets"],
        "summary": "Atualizar pet",
        "description": "Atualiza os dados de um pet (apenas owner)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Rex Atualizado"
                  },
                  "species": {
                    "type": "string",
                    "enum": ["Cachorro", "Gato", "Pássaro", "Peixe", "Réptil", "Roedor", "Outro"],
                    "example": "Cachorro"
                  },
                  "breed": {
                    "type": "string",
                    "example": "Golden Retriever"
                  },
                  "birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2020-01-15"
                  },
                  "weight": {
                    "type": "number",
                    "example": 30.0
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  },
                  "notes": {
                    "type": "string",
                    "example": "Cachorro muito brincalhão"
                  }
                },
                "required": ["name", "species", "breed", "birth_date", "weight"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pet atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pet": {
                      "$ref": "#/components/schemas/Pet"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pet não encontrado"
          },
          "403": {
            "description": "Sem permissão para editar este pet"
          }
        }
      },
      "delete": {
        "tags": ["Pets"],
        "summary": "Remover pet",
        "description": "Remove um pet (soft delete - apenas owner)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Pet removido com sucesso"
          },
          "404": {
            "description": "Pet não encontrado"
          },
          "403": {
            "description": "Sem permissão para deletar este pet"
          }
        }
      }
    },
    "/v1/pets/{pet}/meals": {
      "get": {
        "tags": ["Meals"],
        "summary": "Listar refeições do pet",
        "description": "Retorna todas as refeições de um pet específico",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de refeições",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Meal"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Meals"],
        "summary": "Criar nova refeição",
        "description": "Cria uma nova refeição para o pet (owner e editor)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "food_type": {
                    "type": "string",
                    "example": "Ração Premium"
                  },
                  "quantity": {
                    "type": "number",
                    "example": 100
                  },
                  "unit": {
                    "type": "string",
                    "example": "g"
                  },
                  "scheduled_for": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-10-07 08:00:00"
                  }
                },
                "required": ["food_type", "quantity", "unit", "scheduled_for"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Refeição criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meal"
                }
              }
            }
          },
          "422": {
            "description": "Erro de validação"
          },
          "403": {
            "description": "Sem permissão para criar refeições (apenas owner e editor)"
          }
        }
      }
    },
    "/v1/pets/{pet}/meals/{id}": {
      "get": {
        "tags": ["Meals"],
        "summary": "Exibir refeição específica",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes da refeição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meal"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Meals"],
        "summary": "Atualizar refeição",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "food_type": {
                    "type": "string",
                    "example": "Ração Super Premium"
                  },
                  "quantity": {
                    "type": "number",
                    "example": 150
                  },
                  "unit": {
                    "type": "string",
                    "example": "g"
                  },
                  "scheduled_for": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-10-07 12:00:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refeição atualizada"
          }
        }
      },
      "delete": {
        "tags": ["Meals"],
        "summary": "Remover refeição",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refeição removida"
          }
        }
      }
    },
    "/v1/pets/{pet}/meals/{id}/consume": {
      "post": {
        "tags": ["Meals"],
        "summary": "Marcar refeição como consumida",
        "description": "Marca uma refeição como consumida (owner e editor)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refeição marcada como consumida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Refeição marcada como consumida"
                    },
                    "meal": {
                      "$ref": "#/components/schemas/Meal"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/pets/{pet}/share": {
      "get": {
        "tags": ["Pet Sharing"],
        "summary": "Listar participantes do pet",
        "description": "Lista todos os usuários que têm acesso ao pet e seus papéis",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de participantes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SharedPet"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Pet Sharing"],
        "summary": "Compartilhar pet",
        "description": "Envia um convite para outro usuário acessar o pet (apenas owner)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "example": 2,
                    "description": "ID do usuário (usar user_id OU email)"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "maria.souza@example.com",
                    "description": "Email do usuário (usar user_id OU email)"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["editor", "viewer"],
                    "example": "editor",
                    "description": "editor: pode criar/editar refeições | viewer: apenas visualização"
                  }
                },
                "required": ["role"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Convite enviado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Convite enviado com sucesso."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {"type": "integer", "example": 2},
                        "role": {"type": "string", "example": "editor"},
                        "invitation_status": {"type": "string", "example": "pending"},
                        "invited_by": {"type": "integer", "example": 1}
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Erro de validação ou usuário já tem acesso"
          },
          "403": {
            "description": "Apenas o owner pode compartilhar o pet"
          }
        }
      }
    },
    "/v1/pets/{pet}/share/{user}/accept": {
      "post": {
        "tags": ["Pet Sharing"],
        "summary": "Aceitar convite de compartilhamento",
        "description": "O usuário convidado aceita o convite para acessar o pet",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2
            },
            "description": "ID do usuário que foi convidado"
          }
        ],
        "responses": {
          "200": {
            "description": "Convite aceito com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Convite aceito com sucesso."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {"type": "integer", "example": 2},
                        "role": {"type": "string", "example": "editor"},
                        "invitation_status": {"type": "string", "example": "accepted"}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Convite não encontrado"
          },
          "403": {
            "description": "Apenas o usuário convidado pode aceitar"
          }
        }
      }
    },
    "/v1/pets/{pet}/share/{user}": {
      "patch": {
        "tags": ["Pet Sharing"],
        "summary": "Alterar papel do participante",
        "description": "Altera o papel de um participante (apenas owner)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": ["editor", "viewer"],
                    "example": "viewer"
                  }
                },
                "required": ["role"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Papel atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Papel atualizado com sucesso."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {"type": "integer", "example": 2},
                        "role": {"type": "string", "example": "viewer"}
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Apenas o owner pode alterar papéis"
          }
        }
      },
      "delete": {
        "tags": ["Pet Sharing"],
        "summary": "Revogar acesso do participante",
        "description": "Remove o acesso de um participante ao pet (apenas owner)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Acesso revogado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Acesso revogado com sucesso."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Apenas o owner pode revogar acessos"
          }
        }
      }
    },
    "/v1/pets/{pet}/reminders": {
      "get": {
        "tags": ["Reminders"],
        "summary": "Listar lembretes do pet",
        "description": "Retorna todos os lembretes de um pet com filtros opcionais",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {"type": "integer", "example": 1}
          },
          {
            "name": "status",
            "in": "query",
            "schema": {"type": "string", "enum": ["active", "paused", "done"], "example": "active"}
          },
          {
            "name": "from",
            "in": "query",
            "schema": {"type": "string", "format": "date-time", "example": "2025-10-07 00:00:00"}
          },
          {
            "name": "to",
            "in": "query",
            "schema": {"type": "string", "format": "date-time", "example": "2025-10-14 23:59:59"}
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de lembretes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/Reminder"}
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Reminders"],
        "summary": "Criar novo lembrete",
        "description": "Cria um novo lembrete para o pet (owner e editor)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {"type": "integer", "example": 1}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {"type": "string", "example": "Ração manhã"},
                  "description": {"type": "string", "example": "150g de ração premium"},
                  "scheduled_at": {"type": "string", "format": "date-time", "example": "2025-10-07 08:00:00"},
                  "repeat_rule": {"type": "string", "enum": ["none", "daily", "weekly", "custom"], "example": "daily"},
                  "channel": {"type": "string", "enum": ["in-app", "email", "push"], "example": "in-app"}
                },
                "required": ["title", "scheduled_at"]
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Lembrete criado"},
          "403": {"description": "Sem permissão (apenas owner e editor)"}
        }
      }
    },
    "/v1/reminders/{reminder}": {
      "get": {
        "tags": ["Reminders"],
        "summary": "Visualizar lembrete",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "reminder",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "example": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd"}
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do lembrete",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Reminder"}
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Reminders"],
        "summary": "Atualizar lembrete",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "reminder",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "example": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd"}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {"type": "string", "example": "Ração atualizada"},
                  "description": {"type": "string"},
                  "scheduled_at": {"type": "string", "format": "date-time"},
                  "repeat_rule": {"type": "string", "enum": ["none", "daily", "weekly", "custom"]},
                  "status": {"type": "string", "enum": ["active", "paused", "done"]},
                  "channel": {"type": "string", "enum": ["in-app", "email", "push"]}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Lembrete atualizado"}
        }
      },
      "delete": {
        "tags": ["Reminders"],
        "summary": "Deletar lembrete",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "reminder",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "example": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd"}
          }
        ],
        "responses": {
          "200": {"description": "Lembrete removido"}
        }
      }
    },
    "/v1/reminders/{reminder}/snooze": {
      "post": {
        "tags": ["Reminders"],
        "summary": "Adiar lembrete",
        "description": "Adia o lembrete por X minutos",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "reminder",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "example": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "minutes": {"type": "integer", "minimum": 1, "maximum": 1440, "example": 30}
                },
                "required": ["minutes"]
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Lembrete adiado"}
        }
      }
    },
    "/v1/reminders/{reminder}/complete": {
      "post": {
        "tags": ["Reminders"],
        "summary": "Marcar lembrete como concluído",
        "description": "Marca o lembrete como concluído e cria próxima ocorrência se for recorrente",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "reminder",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "example": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd"}
          }
        ],
        "responses": {
          "200": {"description": "Lembrete concluído"}
        }
      }
    },
    "/v1/notifications": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Listar notificações do usuário",
        "description": "Retorna lista paginada de notificações do usuário autenticado",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filtrar por status da notificação",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["queued", "sent", "failed", "read"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "required": false,
            "schema": {"type": "integer", "default": 1}
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Itens por página",
            "required": false,
            "schema": {"type": "integer", "default": 20}
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de notificações",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Notification"}
                    },
                    "meta": {"$ref": "#/components/schemas/PaginationMeta"}
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd",
                      "user_id": 1,
                      "title": "🔔 Lembrete: Ração manhã",
                      "body": "É hora de dar ração para o Buddy!",
                      "data": {"pet_id": 1, "reminder_id": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd", "type": "reminder_due"},
                      "channel": "db",
                      "status": "sent",
                      "created_at": "2025-10-06T10:30:00.000000Z"
                    }
                  ],
                  "meta": {
                    "total": 1,
                    "per_page": 20,
                    "current_page": 1,
                    "last_page": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/notifications/unread-count": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Contar notificações não lidas",
        "description": "Retorna o número de notificações não lidas do usuário",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Contagem de notificações não lidas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unread_count": {"type": "integer", "example": 3}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/notifications/{notification}/read": {
      "patch": {
        "tags": ["Notifications"],
        "summary": "Marcar notificação como lida",
        "description": "Marca uma notificação específica como lida",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "notification",
            "in": "path",
            "required": true,
            "description": "ID da notificação",
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "responses": {
          "200": {
            "description": "Notificação marcada como lida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "example": "Notificação marcada como lida"}
                  }
                }
              }
            }
          },
          "404": {"description": "Notificação não encontrada"},
          "403": {"description": "Não autorizado a acessar esta notificação"}
        }
      }
    },
    "/v1/notifications/mark-all-read": {
      "post": {
        "tags": ["Notifications"],
        "summary": "Marcar todas as notificações como lidas",
        "description": "Marca todas as notificações do usuário como lidas",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Todas as notificações marcadas como lidas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "example": "Todas as notificações foram marcadas como lidas"},
                    "updated_count": {"type": "integer", "example": 5}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/users": {
      "get": {
        "tags": ["Admin"],
        "summary": "Listar usuários (Admin)",
        "description": "Lista todos os usuários com filtros e paginação. Requer permissão de admin.",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Filtrar por email (busca parcial)",
            "required": false,
            "schema": {"type": "string"}
          },
          {
            "name": "created_from",
            "in": "query",
            "description": "Filtrar por data de criação (início)",
            "required": false,
            "schema": {"type": "string", "format": "date"}
          },
          {
            "name": "created_to",
            "in": "query",
            "description": "Filtrar por data de criação (fim)",
            "required": false,
            "schema": {"type": "string", "format": "date"}
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "required": false,
            "schema": {"type": "integer", "default": 1}
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Itens por página",
            "required": false,
            "schema": {"type": "integer", "default": 20, "maximum": 100}
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "name": "João Silva",
                      "email": "joao@example.com",
                      "is_admin": false,
                      "created_at": "2025-10-01T10:00:00.000000Z"
                    }
                  ],
                  "meta": {
                    "total": 100,
                    "per_page": 20,
                    "current_page": 1,
                    "last_page": 5
                  }
                }
              }
            }
          },
          "403": {"description": "Acesso negado - Requer permissão de admin"}
        }
      }
    },
    "/v1/admin/users/{id}": {
      "patch": {
        "tags": ["Admin"],
        "summary": "Atualizar status de admin (Admin)",
        "description": "Altera permissão de admin de um usuário. Requer permissão de admin.",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do usuário",
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_admin": {"type": "boolean", "example": true}
                },
                "required": ["is_admin"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permissões atualizadas",
            "content": {
              "application/json": {
                "example": {
                  "message": "Permissões de admin atualizadas com sucesso",
                  "user": {
                    "id": 1,
                    "name": "João Silva",
                    "email": "joao@example.com",
                    "is_admin": true
                  }
                }
              }
            }
          },
          "403": {"description": "Acesso negado"},
          "422": {"description": "Não pode remover próprio acesso de admin"}
        }
      }
    },
    "/v1/admin/pets": {
      "get": {
        "tags": ["Admin"],
        "summary": "Listar pets (Admin)",
        "description": "Lista todos os pets com filtros e paginação. Requer permissão de admin.",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "owner_id",
            "in": "query",
            "description": "Filtrar por dono do pet",
            "required": false,
            "schema": {"type": "integer"}
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "required": false,
            "schema": {"type": "integer", "default": 1}
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Itens por página",
            "required": false,
            "schema": {"type": "integer", "default": 20, "maximum": 100}
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pets",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "name": "Buddy",
                      "species": "dog",
                      "breed": "Golden Retriever",
                      "user": {
                        "id": 1,
                        "name": "João Silva",
                        "email": "joao@example.com"
                      },
                      "created_at": "2025-10-01T10:00:00.000000Z"
                    }
                  ],
                  "meta": {
                    "total": 50,
                    "per_page": 20,
                    "current_page": 1,
                    "last_page": 3
                  }
                }
              }
            }
          },
          "403": {"description": "Acesso negado"}
        }
      }
    },
    "/v1/admin/audit-logs": {
      "get": {
        "tags": ["Admin"],
        "summary": "Listar logs de auditoria (Admin)",
        "description": "Lista logs de auditoria com filtros e paginação. Requer permissão de admin.",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "description": "Filtrar por ação",
            "required": false,
            "schema": {"type": "string", "enum": ["created", "updated", "deleted", "accessed", "login", "logout", "list_users", "list_pets"]}
          },
          {
            "name": "entity_type",
            "in": "query",
            "description": "Filtrar por tipo de entidade",
            "required": false,
            "schema": {"type": "string", "enum": ["User", "Pet", "Meal", "Reminder", "Notification"]}
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Filtrar por usuário",
            "required": false,
            "schema": {"type": "integer"}
          },
          {
            "name": "from",
            "in": "query",
            "description": "Data inicial",
            "required": false,
            "schema": {"type": "string", "format": "date"}
          },
          {
            "name": "to",
            "in": "query",
            "description": "Data final",
            "required": false,
            "schema": {"type": "string", "format": "date"}
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "required": false,
            "schema": {"type": "integer", "default": 1}
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Itens por página",
            "required": false,
            "schema": {"type": "integer", "default": 50, "maximum": 100}
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de logs de auditoria",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd",
                      "action": "updated",
                      "entity_type": "User",
                      "entity_id": "1",
                      "old_values": {"is_admin": false},
                      "new_values": {"is_admin": true},
                      "user": {
                        "id": 2,
                        "name": "Admin",
                        "email": "admin@utfpets.com"
                      },
                      "ip_address": "127.0.0.1",
                      "created_at": "2025-10-07T20:00:00.000000Z"
                    }
                  ],
                  "meta": {
                    "total": 200,
                    "per_page": 50,
                    "current_page": 1,
                    "last_page": 4
                  }
                }
              }
            }
          },
          "403": {"description": "Acesso negado"}
        }
      }
    },
    "/v1/pets/{petId}/weights": {
      "get": {
        "tags": ["Pet Weights"],
        "summary": "Listar pesos de um pet",
        "description": "Lista histórico de pesos de um pet com filtros opcionais",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          },
          {
            "name": "from",
            "in": "query",
            "description": "Data inicial (YYYY-MM-DD)",
            "required": false,
            "schema": {"type": "string", "format": "date"}
          },
          {
            "name": "to",
            "in": "query",
            "description": "Data final (YYYY-MM-DD)",
            "required": false,
            "schema": {"type": "string", "format": "date"}
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pesos do pet",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd",
                      "pet_id": 1,
                      "weight_kg": 12.5,
                      "measured_at": "2025-10-08T10:30:00.000000Z",
                      "notes": "Peso após consulta veterinária",
                      "created_at": "2025-10-08T10:30:00.000000Z"
                    }
                  ],
                  "meta": {
                    "total": 10,
                    "trend": "increasing",
                    "average_weight": 12.3,
                    "min_weight": 11.5,
                    "max_weight": 12.5
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Pet Weights"],
        "summary": "Registrar novo peso",
        "description": "Registra um novo peso para o pet",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["weight_kg"],
                "properties": {
                  "weight_kg": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0.1,
                    "example": 12.5
                  },
                  "measured_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-10-08T10:30:00Z"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "example": "Peso após consulta"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Peso registrado com sucesso"
          }
        }
      }
    },
    "/v1/pets/{petId}/weights/{weightId}": {
      "delete": {
        "tags": ["Pet Weights"],
        "summary": "Deletar registro de peso",
        "description": "Remove um registro de peso do histórico",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          },
          {
            "name": "weightId",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "responses": {
          "200": {
            "description": "Peso deletado com sucesso"
          }
        }
      }
    },
    "/v1/devices/register": {
      "post": {
        "tags": ["User Devices"],
        "summary": "Registrar dispositivo para push notifications",
        "description": "Registra ou atualiza um dispositivo para receber notificações push via FCM",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["fcm_token", "platform"],
                "properties": {
                  "fcm_token": {
                    "type": "string",
                    "example": "dXRmcGV0czp0b2tlbjoxMjM0NTY3ODkw..."
                  },
                  "platform": {
                    "type": "string",
                    "enum": ["android", "ios", "web"],
                    "example": "android"
                  },
                  "device_name": {
                    "type": "string",
                    "nullable": true,
                    "example": "Galaxy S21"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Dispositivo registrado com sucesso"
          },
          "200": {
            "description": "Dispositivo atualizado (token já existia)"
          }
        }
      }
    },
    "/v1/devices": {
      "get": {
        "tags": ["User Devices"],
        "summary": "Listar dispositivos do usuário",
        "description": "Lista todos os dispositivos registrados do usuário autenticado",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Lista de dispositivos",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd",
                      "platform": "android",
                      "device_name": "Galaxy S21",
                      "last_seen_at": "2025-10-08T10:30:00.000000Z",
                      "created_at": "2025-10-08T10:30:00.000000Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/devices/{deviceId}": {
      "delete": {
        "tags": ["User Devices"],
        "summary": "Remover dispositivo",
        "description": "Remove um dispositivo da lista de dispositivos registrados",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "responses": {
          "200": {
            "description": "Dispositivo removido com sucesso"
          }
        }
      }
    },
    "/v1/calendar": {
      "get": {
        "tags": ["Calendar"],
        "summary": "Obter URL do calendário",
        "description": "Retorna a URL do calendário .ics do usuário para sincronização com aplicativos de calendário",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "URL do calendário",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "calendar_token": "550e8400-e29b-41d4-a716-446655440000",
                    "calendar_url": "http://localhost:8080/calendar/550e8400-e29b-41d4-a716-446655440000.ics",
                    "instructions": "Use esta URL em seu aplicativo de calendário favorito (Google Calendar, Apple Calendar, Outlook, etc.) para sincronizar seus lembretes."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/calendar/rotate-token": {
      "post": {
        "tags": ["Calendar"],
        "summary": "Rotacionar token do calendário",
        "description": "Gera um novo token de calendário, invalidando o anterior. Útil para segurança caso a URL seja compartilhada indevidamente.",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Novo token gerado",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "calendar_token": "650e8400-e29b-41d4-a716-446655440001",
                    "calendar_url": "http://localhost:8080/calendar/650e8400-e29b-41d4-a716-446655440001.ics"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/locations": {
      "get": {
        "tags": ["Locations"],
        "summary": "Listar localizações do usuário",
        "description": "Retorna todas as localizações do usuário autenticado",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Lista de localizações",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "uuid",
                      "user_id": 1,
                      "name": "Casa Principal",
                      "address": "Rua das Flores, 123",
                      "city": "Curitiba",
                      "state": "PR",
                      "country": "Brasil",
                      "timezone": "America/Sao_Paulo",
                      "pets_count": 2,
                      "created_at": "2025-10-01T10:00:00.000000Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Locations"],
        "summary": "Criar nova localização",
        "description": "Cria uma nova localização para o usuário",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {"type": "string", "example": "Casa Principal"},
                  "address": {"type": "string", "example": "Rua das Flores, 123"},
                  "city": {"type": "string", "example": "Curitiba"},
                  "state": {"type": "string", "example": "PR"},
                  "country": {"type": "string", "example": "Brasil"},
                  "timezone": {"type": "string", "example": "America/Sao_Paulo"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Localização criada"},
          "422": {"description": "Nome duplicado ou validação falhou"}
        }
      }
    },
    "/v1/locations/{location}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Exibir localização específica",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "responses": {
          "200": {"description": "Detalhes da localização"},
          "403": {"description": "Sem permissão"},
          "404": {"description": "Localização não encontrada"}
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Atualizar localização",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "address": {"type": "string"},
                  "city": {"type": "string"},
                  "state": {"type": "string"},
                  "country": {"type": "string"},
                  "timezone": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Localização atualizada"},
          "403": {"description": "Sem permissão"},
          "404": {"description": "Localização não encontrada"}
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Deletar localização",
        "description": "Remove localização (apenas se não tiver pets associados)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "responses": {
          "200": {"description": "Localização removida"},
          "422": {"description": "Não pode deletar - existem pets associados"},
          "403": {"description": "Sem permissão"},
          "404": {"description": "Localização não encontrada"}
        }
      }
    },
    "/v1/graphql/read": {
      "post": {
        "tags": ["GraphQL"],
        "summary": "Proxy para API GraphQL (Read-only)",
        "description": "Endpoint proxy para consultas GraphQL read-only. Mutations são bloqueadas.",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["query"],
                "properties": {
                  "query": {
                    "type": "string",
                    "example": "{ pets { id name species } }"
                  },
                  "variables": {
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resposta da consulta GraphQL",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "pets": [
                      {
                        "id": "1",
                        "name": "Buddy",
                        "species": "dog"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/educational-articles": {
      "get": {
        "tags": ["Educational Articles"],
        "summary": "Lista artigos educacionais publicados",
        "description": "Endpoint público que retorna lista paginada de artigos publicados, com opções de busca e filtro por tags",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Busca por termo no título, resumo ou conteúdo",
            "required": false,
            "schema": {
              "type": "string",
              "example": "nutrição"
            }
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "Filtra por tags específicas (pode passar múltiplas)",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": ["Cães", "Nutrição"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Itens por página (máximo: 50)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 15,
              "maximum": 50,
              "example": 15
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de artigos publicados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "title": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "summary": {
                            "type": "string"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "published_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "9d8e7f6a-5b4c-3d2e-1a0b-9c8d7e6f5a4b",
                      "title": "Alimentos Proibidos para Cães: O Que Você Precisa Saber",
                      "slug": "alimentos-proibidos-para-caes-o-que-voce-precisa-saber",
                      "summary": "Descubra quais alimentos são tóxicos para cães e como prevenir intoxicações alimentares em seu pet.",
                      "tags": ["Cães", "Segurança Alimentar", "Alimentos Proibidos", "Prevenção"],
                      "published_at": "2025-10-05T14:30:00.000000Z",
                      "created_at": "2025-10-05T10:00:00.000000Z"
                    }
                  ],
                  "links": {
                    "first": "http://localhost/educational-articles?page=1",
                    "last": "http://localhost/educational-articles?page=3",
                    "prev": null,
                    "next": "http://localhost/educational-articles?page=2"
                  },
                  "meta": {
                    "current_page": 1,
                    "from": 1,
                    "last_page": 3,
                    "per_page": 15,
                    "to": 15,
                    "total": 45
                  }
                }
              }
            }
          }
        }
      }
    },
    "/educational-articles/{slug}": {
      "get": {
        "tags": ["Educational Articles"],
        "summary": "Exibe detalhes de um artigo educacional",
        "description": "Endpoint público que retorna detalhes completos de um artigo publicado pelo slug",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug único do artigo",
            "required": true,
            "schema": {
              "type": "string",
              "example": "alimentos-proibidos-para-caes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do artigo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "title": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string",
                      "description": "Conteúdo HTML do artigo"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "published_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "creator": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "id": "9d8e7f6a-5b4c-3d2e-1a0b-9c8d7e6f5a4b",
                  "title": "Alimentos Proibidos para Cães: O Que Você Precisa Saber",
                  "slug": "alimentos-proibidos-para-caes-o-que-voce-precisa-saber",
                  "summary": "Descubra quais alimentos são tóxicos para cães...",
                  "body": "<h2>Introdução</h2><p>Muitos tutores não sabem...</p>",
                  "tags": ["Cães", "Segurança Alimentar"],
                  "published_at": "2025-10-05T14:30:00.000000Z",
                  "created_at": "2025-10-05T10:00:00.000000Z",
                  "updated_at": "2025-10-05T10:00:00.000000Z",
                  "creator": {
                    "id": "1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p",
                    "name": "Admin User",
                    "email": "admin@utfpets.com"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Artigo não encontrado ou não publicado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Artigo não encontrado."
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/educational-articles": {
      "post": {
        "tags": ["Educational Articles - Admin"],
        "summary": "Cria um novo artigo educacional",
        "description": "Endpoint admin para criar artigos. Gera slug automaticamente a partir do título.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "summary", "body"],
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 120,
                    "description": "Título do artigo (único)",
                    "example": "Nutrição Balanceada para Gatos"
                  },
                  "summary": {
                    "type": "string",
                    "maxLength": 300,
                    "description": "Resumo do artigo",
                    "example": "Aprenda sobre as necessidades nutricionais específicas dos gatos."
                  },
                  "body": {
                    "type": "string",
                    "description": "Conteúdo HTML do artigo (tags script bloqueadas)",
                    "example": "<h2>Introdução</h2><p>Gatos são carnívoros obrigatórios...</p>"
                  },
                  "tags": {
                    "type": "array",
                    "maxItems": 10,
                    "items": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "description": "Tags do artigo (máximo 10)",
                    "example": ["Gatos", "Nutrição", "Saúde"]
                  },
                  "published_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "description": "Data de publicação (null = rascunho)",
                    "example": "2025-10-08T10:00:00Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Artigo criado com sucesso",
            "content": {
              "application/json": {
                "example": {
                  "message": "Artigo educacional criado com sucesso.",
                  "data": {
                    "id": "9d8e7f6a-5b4c-3d2e-1a0b-9c8d7e6f5a4b",
                    "title": "Nutrição Balanceada para Gatos",
                    "slug": "nutricao-balanceada-para-gatos",
                    "summary": "Aprenda sobre as necessidades nutricionais...",
                    "body": "<h2>Introdução</h2><p>Gatos são carnívoros...</p>",
                    "tags": ["Gatos", "Nutrição", "Saúde"],
                    "published_at": "2025-10-08T10:00:00.000000Z",
                    "created_by": "1a2b3c4d",
                    "created_at": "2025-10-08T09:00:00.000000Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado"
          },
          "403": {
            "description": "Acesso negado (não é admin)"
          },
          "422": {
            "description": "Erro de validação",
            "content": {
              "application/json": {
                "example": {
                  "message": "O título é obrigatório.",
                  "errors": {
                    "title": ["O título é obrigatório."]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/educational-articles/{id}": {
      "patch": {
        "tags": ["Educational Articles - Admin"],
        "summary": "Atualiza um artigo educacional",
        "description": "Atualiza artigo existente. Slug só é regenerado se regenerate_slug=true",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID do artigo",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 120
                  },
                  "summary": {
                    "type": "string",
                    "maxLength": 300
                  },
                  "body": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "maxItems": 10,
                    "items": {
                      "type": "string"
                    }
                  },
                  "published_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "regenerate_slug": {
                    "type": "boolean",
                    "description": "Se true, regenera slug a partir do título",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Artigo atualizado com sucesso",
            "content": {
              "application/json": {
                "example": {
                  "message": "Artigo educacional atualizado com sucesso.",
                  "data": {
                    "id": "9d8e7f6a-5b4c-3d2e-1a0b-9c8d7e6f5a4b",
                    "title": "Título Atualizado",
                    "slug": "titulo-original",
                    "summary": "Novo resumo..."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado"
          },
          "403": {
            "description": "Acesso negado"
          },
          "404": {
            "description": "Artigo não encontrado"
          },
          "422": {
            "description": "Erro de validação"
          }
        }
      },
      "delete": {
        "tags": ["Educational Articles - Admin"],
        "summary": "Remove um artigo educacional",
        "description": "Soft delete do artigo",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID do artigo",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artigo removido com sucesso",
            "content": {
              "application/json": {
                "example": {
                  "message": "Artigo educacional removido com sucesso."
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado"
          },
          "403": {
            "description": "Acesso negado"
          },
          "404": {
            "description": "Artigo não encontrado"
          }
        }
      }
    },
    "/v1/admin/educational-articles/{id}/publish": {
      "post": {
        "tags": ["Educational Articles - Admin"],
        "summary": "Publica um artigo educacional",
        "description": "Define published_at para agora, tornando o artigo público",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID do artigo",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artigo publicado com sucesso",
            "content": {
              "application/json": {
                "example": {
                  "message": "Artigo publicado com sucesso.",
                  "data": {
                    "id": "9d8e7f6a-5b4c-3d2e-1a0b-9c8d7e6f5a4b",
                    "title": "Título do Artigo",
                    "published_at": "2025-10-08T15:30:00.000000Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado"
          },
          "403": {
            "description": "Acesso negado"
          },
          "404": {
            "description": "Artigo não encontrado"
          }
        }
      }
    },
    "/v1/admin/educational-articles/drafts": {
      "get": {
        "tags": ["Educational Articles - Admin"],
        "summary": "Lista artigos rascunhos",
        "description": "Lista artigos não publicados (published_at null ou futuro)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {"type": "integer", "default": 1}
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {"type": "integer", "default": 15, "maximum": 50}
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de rascunhos",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "9d8e7f6a-5b4c-3d2e-1a0b-9c8d7e6f5a4b",
                      "title": "Artigo em Rascunho",
                      "slug": "artigo-em-rascunho",
                      "summary": "Resumo do artigo...",
                      "tags": ["Tag1"],
                      "published_at": null,
                      "created_at": "2025-10-08T10:00:00.000000Z",
                      "updated_at": "2025-10-08T12:00:00.000000Z",
                      "creator": {
                        "id": "1a2b3c4d",
                        "name": "Admin User",
                        "email": "admin@utfpets.com"
                      }
                    }
                  ],
                  "meta": {"total": 5, "per_page": 15}
                }
              }
            }
          },
          "403": {"description": "Acesso negado"}
        }
      }
    },
    "/v1/admin/educational-articles/{id}/duplicate": {
      "post": {
        "tags": ["Educational Articles - Admin"],
        "summary": "Duplica um artigo educacional",
        "description": "Cria uma cópia do artigo como rascunho com novo slug",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "responses": {
          "201": {
            "description": "Artigo duplicado",
            "content": {
              "application/json": {
                "example": {
                  "message": "Artigo duplicado com sucesso.",
                  "data": {
                    "id": "new-uuid",
                    "title": "Título Original (Cópia)",
                    "slug": "titulo-original-copia",
                    "published_at": null
                  }
                }
              }
            }
          },
          "403": {"description": "Acesso negado"},
          "404": {"description": "Artigo não encontrado"}
        }
      }
    },
    "/v1/admin/stats/overview": {
      "get": {
        "tags": ["Admin"],
        "summary": "Estatísticas gerais da plataforma",
        "description": "Retorna contadores em tempo real de users, pets, reminders e artigos",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Estatísticas gerais",
            "content": {
              "application/json": {
                "example": {
                  "users": {"total": 1250, "admins": 3},
                  "pets": {"total": 2890},
                  "reminders": {"active": 567},
                  "educational_articles": {"published": 45, "drafts": 12}
                }
              }
            }
          },
          "403": {"description": "Acesso negado"}
        }
      }
    },
    "/v1/pets/{pet}/nutrition/summary": {
      "get": {
        "tags": ["Nutrition"],
        "summary": "Resumo nutricional do pet",
        "description": "Retorna agregações de refeições, evolução de peso e alertas heurísticos",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "pet",
            "in": "path",
            "required": true,
            "schema": {"type": "integer", "example": 1}
          },
          {
            "name": "from",
            "in": "query",
            "description": "Data inicial (YYYY-MM-DD). Default: 30 dias atrás",
            "required": false,
            "schema": {"type": "string", "format": "date", "example": "2025-09-01"}
          },
          {
            "name": "to",
            "in": "query",
            "description": "Data final (YYYY-MM-DD). Default: hoje",
            "required": false,
            "schema": {"type": "string", "format": "date", "example": "2025-09-30"}
          }
        ],
        "responses": {
          "200": {
            "description": "Resumo nutricional",
            "content": {
              "application/json": {
                "example": {
                  "pet_id": "9d8e7f6a-5b4c-3d2e-1a0b-9c8d7e6f5a4b",
                  "range": {"from": "2025-09-01", "to": "2025-09-30"},
                  "meals": {
                    "total": 45,
                    "per_day": [
                      {"date": "2025-09-01", "count": 2},
                      {"date": "2025-09-02", "count": 1}
                    ],
                    "avg_food_amount": 130.5
                  },
                  "weight": {
                    "first": {"date": "2025-09-01", "kg": 7.2},
                    "last": {"date": "2025-09-30", "kg": 7.5},
                    "delta_kg": 0.3
                  },
                  "alerts": [
                    {
                      "code": "LOW_MEAL_FREQUENCY",
                      "severity": "medium",
                      "message": "Queda de 30% na frequência de refeições nos últimos 7 dias."
                    },
                    {
                      "code": "FAST_WEIGHT_GAIN",
                      "severity": "low",
                      "message": "Ganho de 5.2% em 14 dias (0.30 kg)."
                    }
                  ]
                }
              }
            }
          },
          "403": {"description": "Sem permissão"},
          "404": {"description": "Pet não encontrado"},
          "422": {"description": "Range inválido (máximo 180 dias)"}
        }
      }
    },
    "/v1/reminders/{reminder}/test": {
      "post": {
        "tags": ["Reminders"],
        "summary": "Testar lembrete",
        "description": "Envia notificação de teste imediatamente (fila low priority)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "reminder",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "format": "uuid", "example": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd"}
          }
        ],
        "responses": {
          "200": {
            "description": "Teste enfileirado",
            "content": {
              "application/json": {
                "example": {
                  "message": "Teste de lembrete enfileirado com sucesso.",
                  "delivery_id": "uuid-notificacao",
                  "status": "queued",
                  "channel": "push"
                }
              }
            }
          },
          "403": {"description": "Sem permissão"},
          "404": {"description": "Lembrete não encontrado"}
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT obtido através do login"
      }
    },
    "schemas": {
      "Pet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Rex"
          },
          "species": {
            "type": "string",
            "enum": ["Cachorro", "Gato", "Pássaro", "Peixe", "Réptil", "Roedor", "Outro"],
            "example": "Cachorro"
          },
          "breed": {
            "type": "string",
            "example": "Labrador"
          },
          "birth_date": {
            "type": "string",
            "format": "date",
            "example": "2020-01-15"
          },
          "weight": {
            "type": "number",
            "format": "float",
            "example": 25.5
          },
          "photo": {
            "type": "string",
            "nullable": true,
            "example": "https://res.cloudinary.com/demo/image/upload/sample.jpg"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "example": "Cachorro muito dócil e brincalhão"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-06T10:30:00.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-06T10:30:00.000000Z"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": null
          }
        }
      },
      "Meal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "pet_id": {
            "type": "integer",
            "example": 1
          },
          "food_type": {
            "type": "string",
            "example": "Ração Premium"
          },
          "quantity": {
            "type": "number",
            "example": 100
          },
          "unit": {
            "type": "string",
            "example": "g"
          },
          "scheduled_for": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-07T08:00:00.000000Z"
          },
          "consumed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": null
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-06T10:30:00.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-06T10:30:00.000000Z"
          }
        }
      },
      "SharedPet": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "Maria Souza"
          },
          "email": {
            "type": "string",
            "example": "maria.souza@example.com"
          },
          "role": {
            "type": "string",
            "enum": ["owner", "editor", "viewer"],
            "example": "editor",
            "description": "owner: controle total | editor: pode criar/editar refeições | viewer: apenas visualização"
          },
          "invitation_status": {
            "type": "string",
            "enum": ["pending", "accepted", "revoked"],
            "example": "accepted"
          },
          "invited_by": {
            "type": "integer",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-06T10:30:00.000000Z"
          }
        }
      },
      "Reminder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd"
          },
          "pet_id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Ração manhã"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "150g de ração premium"
          },
          "scheduled_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-07T08:00:00.000000Z"
          },
          "repeat_rule": {
            "type": "string",
            "enum": ["none", "daily", "weekly", "custom"],
            "nullable": true,
            "example": "daily",
            "description": "none: não repete | daily: todos os dias | weekly: toda semana | custom: RRULE personalizada"
          },
          "status": {
            "type": "string",
            "enum": ["active", "paused", "done"],
            "example": "active",
            "description": "active: ativo | paused: pausado | done: concluído"
          },
          "channel": {
            "type": "string",
            "enum": ["in-app", "email", "push"],
            "example": "in-app",
            "description": "Canal de notificação"
          },
          "days_of_week": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"]
            },
            "nullable": true,
            "example": ["MON", "WED", "FRI"],
            "description": "Dias da semana permitidos (null = todos os dias)"
          },
          "timezone_override": {
            "type": "string",
            "nullable": true,
            "example": "America/Sao_Paulo",
            "description": "Timezone IANA (null = usa timezone do usuário)"
          },
          "snooze_minutes_default": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1440,
            "example": 15,
            "description": "Minutos padrão para snooze (0-1440)"
          },
          "active_window_start": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "example": "08:00",
            "description": "Horário de início da janela ativa (H:i)"
          },
          "active_window_end": {
            "type": "string",
            "format": "time",
            "nullable": true,
            "example": "20:00",
            "description": "Horário de fim da janela ativa (H:i)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-06T10:30:00.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-06T10:30:00.000000Z"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd"
          },
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "🔔 Lembrete: Ração manhã"
          },
          "body": {
            "type": "string",
            "example": "É hora de dar ração para o Buddy!"
          },
          "data": {
            "type": "object",
            "nullable": true,
            "example": {
              "pet_id": 1,
              "reminder_id": "0199bfd0-56e5-731e-b90f-c24bf2d52ddd",
              "type": "reminder_due"
            }
          },
          "channel": {
            "type": "string",
            "enum": ["db", "email", "push"],
            "example": "db",
            "description": "Canal de notificação"
          },
          "status": {
            "type": "string",
            "enum": ["queued", "sent", "failed", "read"],
            "example": "sent",
            "description": "queued: na fila | sent: enviada | failed: falhou | read: lida"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-06T10:30:00.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-06T10:30:00.000000Z"
          }
        }
      },
      "EducationalArticle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "9d8e7f6a-5b4c-3d2e-1a0b-9c8d7e6f5a4b"
          },
          "title": {
            "type": "string",
            "example": "Alimentos Proibidos para Cães"
          },
          "slug": {
            "type": "string",
            "example": "alimentos-proibidos-para-caes"
          },
          "summary": {
            "type": "string",
            "example": "Descubra quais alimentos são tóxicos para cães..."
          },
          "body": {
            "type": "string",
            "example": "<h2>Introdução</h2><p>Conteúdo do artigo...</p>"
          },
          "tags": {
            "type": "array",
            "items": {"type": "string"},
            "nullable": true,
            "example": ["Cães", "Segurança Alimentar"]
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-10-05T14:30:00.000000Z"
          },
          "created_by": {
            "type": "integer",
            "example": 1
          },
          "creator": {
            "type": "object",
            "properties": {
              "id": {"type": "integer", "example": 1},
              "name": {"type": "string", "example": "Admin User"},
              "email": {"type": "string", "example": "admin@utfpets.com"}
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-05T10:00:00.000000Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-05T10:00:00.000000Z"
          }
        }
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "total": {"type": "integer", "example": 100},
          "per_page": {"type": "integer", "example": 15},
          "current_page": {"type": "integer", "example": 1},
          "last_page": {"type": "integer", "example": 7},
          "from": {"type": "integer", "example": 1},
          "to": {"type": "integer", "example": 15}
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {"type": "string", "format": "uuid", "example": "uuid-location"},
          "user_id": {"type": "integer", "example": 1},
          "name": {"type": "string", "example": "Casa Principal"},
          "address": {"type": "string", "nullable": true, "example": "Rua das Flores, 123"},
          "city": {"type": "string", "nullable": true, "example": "Curitiba"},
          "state": {"type": "string", "nullable": true, "example": "PR"},
          "country": {"type": "string", "nullable": true, "example": "Brasil"},
          "timezone": {"type": "string", "example": "America/Sao_Paulo"},
          "pets_count": {"type": "integer", "example": 2, "description": "Número de pets nesta localização"},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-10-01T10:00:00.000000Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-10-01T10:00:00.000000Z"}
        }
      },
      "PetWeight": {
        "type": "object",
        "properties": {
          "id": {"type": "string", "format": "uuid", "example": "uuid-weight"},
          "pet_id": {"type": "integer", "example": 1},
          "weight_kg": {"type": "number", "format": "float", "example": 12.5},
          "weighed_at": {"type": "string", "format": "date-time", "example": "2025-10-08T10:30:00.000000Z"},
          "notes": {"type": "string", "nullable": true, "example": "Peso após consulta veterinária"},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-10-08T10:30:00.000000Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-10-08T10:30:00.000000Z"}
        }
      },
      "UserDevice": {
        "type": "object",
        "properties": {
          "id": {"type": "string", "format": "uuid", "example": "uuid-device"},
          "user_id": {"type": "integer", "example": 1},
          "platform": {"type": "string", "enum": ["android", "ios", "web"], "example": "android"},
          "device_name": {"type": "string", "nullable": true, "example": "Galaxy S21"},
          "fcm_token": {"type": "string", "example": "encrypted-token"},
          "last_seen_at": {"type": "string", "format": "date-time", "example": "2025-10-08T10:30:00.000000Z"},
          "created_at": {"type": "string", "format": "date-time", "example": "2025-10-08T10:30:00.000000Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2025-10-08T10:30:00.000000Z"}
        }
      }
    }
  }
}
